_mem_init.init_db()

from mother.core import tone
from fastapi import FastAPI
from mother.core.nudges import NudgeRequest, compose_nudge, demo_nudge

from mother.core import memory

app = FastAPI(title="mother-api")


@app.get("/health")
def health():
    return {"status": "ok"}


@app.post("/nudge/preview")
def nudge_preview(nr: NudgeRequest):
    return {"message": tone.apply(compose_nudge(nr), "routine")}


@app.get("/nudge/demo")
def nudge_demo():
    return {"message": demo_nudge()}


from pydantic import BaseModel


class RememberBody(BaseModel):
    user_id: str = "default"
    key: str
    value: str
    ttl_days: int | None = None
    source: str = "api"
    confidence: float = 0.9


@app.post("/memory/remember")
def memory_remember(body: RememberBody):
    memory.remember_fact(
        body.user_id,
        body.key,
        body.value,
        ttl_days=body.ttl_days,
        source=body.source,
        confidence=body.confidence,
    )
    return {"status": "ok"}


@app.get("/memory/profile")
def memory_profile(user_id: str = "default"):
    prof = memory.get_profile(user_id)
    return {"user_id": user_id, "profile": prof}


@app.on_event("startup")
def _init_memory() -> None:
    memory.init_db()
